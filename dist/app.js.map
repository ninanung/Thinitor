{"version":3,"sources":["webpack://Thinitor/webpack/universalModuleDefinition","webpack://Thinitor/./src/classes/root_element.ts","webpack://Thinitor/./src/classes/text_element.ts","webpack://Thinitor/./src/constants.ts","webpack://Thinitor/./src/index.ts","webpack://Thinitor/./src/modules/element_creator/create_element.ts","webpack://Thinitor/./src/modules/event_listener/root_element_keyboard_event.ts","webpack://Thinitor/./src/modules/event_listener/text_element_keyborad_event.ts","webpack://Thinitor/./src/utils/common.ts","webpack://Thinitor/./src/utils/errorLogs.ts","webpack://Thinitor/webpack/bootstrap","webpack://Thinitor/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","id","classes","element","document","getElementById","this","rootElement","newElement","generateRandomString","appendChild","getElement","listenEnterKeyInTheRoot","listenBackspaceKeyInTheText","logError","addNewChild","child","focusedIndex","focusedElement","activeElement","forEach","childClass","index","getElementId","length","focus","insertAfter","splice","removeChild","childElement","previousElementSibling","remove","getRootElement","getClasses","getHtml","innerHTML","RootElement","createElement","listenArrowKeyInTheText","TextElement","ERROR_PREFIX","tag","logUndefinedParameter","h1Element","contentEditable","addEventListener","e","key","includes","preventDefault","newElementId","previousChildElement","nextChildElement","nextElementSibling","result","characters","i","charAt","Math","floor","random","rootNode","newNode","existingNode","insertBefore","nextSibling","getElementIndex","childIndex","children","parentElement","text","console","error","funcName","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Thinitor\"] = factory();\n\telse\n\t\troot[\"Thinitor\"] = factory();\n})(self, function() {\nreturn ","import { \n    listenEnterKeyInTheRoot,\n    listenBackspaceKeyInTheText\n} from '../modules/event_listener/root_element_keyboard_event';\n\nimport { generateRandomString, insertAfter } from '../utils/common';\nimport { logError } from '../utils/errorLogs';\n\nimport TextElement from './text_element';\n\nclass RootElement {\n    private readonly rootElement: Element;\n    private element: Element;\n    private classes: Array<TextElement> = [];\n\n    constructor(id: string) {\n        const element = document.getElementById(id);\n        if (!element) logError(`Can't find the element has \"${id}\" id.`);\n        else {\n            this.rootElement = element;\n            this.element = element;\n            const newElement = new TextElement(generateRandomString());\n            this.element.appendChild(newElement.getElement());\n            this.classes = [...this.classes, newElement];\n            listenEnterKeyInTheRoot(this);\n            listenBackspaceKeyInTheText(this);\n        }\n    }\n\n    public addNewChild(child: TextElement): void {\n        let focusedIndex: number;\n        const focusedElement = document.activeElement;\n        this.classes.forEach((childClass, index) => {\n            if (childClass.getElementId() === focusedElement.id) focusedIndex = index; \n        });\n        if (focusedIndex + 1 === this.classes.length) {\n            this.element.appendChild(child.getElement());\n            this.classes = [...this.classes, child];\n            document.getElementById(child.getElementId()).focus();\n            return;\n        }\n        insertAfter(this.element, child.getElement(), focusedElement);\n        this.classes.splice(focusedIndex, 0, child);\n        document.getElementById(child.getElementId()).focus();\n        return;\n    }\n\n    public removeChild(childElement: Element): void {\n        let focusedIndex: number;\n        this.classes.forEach((childClass, index) => {\n            if (childClass.getElementId() === childElement.id) focusedIndex = index; \n        });\n        document.getElementById(childElement.previousElementSibling.id).focus();\n        this.classes.splice(focusedIndex, 1);\n        childElement.remove();\n    }\n\n    public getRootElement(): Element {\n        return this.rootElement;\n    }\n\n    public getClasses(): Array<TextElement> {\n        return this.classes;\n    }\n\n    public getHtml(): string {\n        return this.element.innerHTML;\n    }\n\n    public getElement(): Element {\n        return this.element;\n    }\n}\n\nexport default RootElement;","import { createElement } from '../modules/element_creator/create_element';\n\nimport { logError } from '../utils/errorLogs';\n\nimport { \n    listenArrowKeyInTheText\n} from '../modules/event_listener/text_element_keyborad_event';\n\nclass TextElement {\n    private id: string;\n    private element: Element;\n\n    constructor(id: string) {\n        if (!id) logError('Fail to create element, id is missing.');\n        else {\n            this.id = id;\n            this.element = createElement(id, 'p');\n            listenArrowKeyInTheText(this);\n        }\n    }\n\n    public getElement(): Element {\n        return this.element\n    }\n\n    public getElementId(): string {\n        return this.id;\n    }\n}\n\nexport default TextElement;","const ERROR_PREFIX = 'Thinitor Error | ';\n\nexport default {\n    ERROR_PREFIX\n}","import RootElement from './classes/root_element';\nexport default RootElement;","import { logUndefinedParameter } from '../../utils/errorLogs';\n\nexport const createElement = (id: string, tag: string): Element => {\n    if (!id || !tag) logUndefinedParameter('createElement');\n    const h1Element = document.createElement(tag);\n    h1Element.contentEditable = 'true';\n    h1Element.id = id;\n    return h1Element\n}","import { \n    generateRandomString\n} from '../../utils/common';\n\nimport RootElement from '../../classes/root_element';\nimport TextElement from '../../classes/text_element';\n\nexport const listenEnterKeyInTheRoot = (root: RootElement): void => {\n    const listenElement = root.getElement();\n    listenElement.addEventListener('keydown', (e: KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            // check if the focused element is child of root element\n            if (document.activeElement.id.includes('thinitor_element_')) {\n                e.preventDefault();\n                const newElementId = generateRandomString();\n                const newElement = new TextElement(newElementId);\n                root.addNewChild(newElement);\n            }\n        }\n    });\n}\n\nexport const listenBackspaceKeyInTheText = (root: RootElement): void => {\n    const listenElement = root.getElement();\n    listenElement.addEventListener('keydown', (e: KeyboardEvent) => {\n        if (e.key === 'Backspace') {\n            const focusedElement = document.activeElement;\n            // check if the focused element is child of root element\n            if (focusedElement.id.includes('thinitor_element_')) {\n                // check if child has content and is not first child of root element\n                if (focusedElement.innerHTML.length < 1 && focusedElement.previousElementSibling) {\n                    e.preventDefault();\n                    root.removeChild(focusedElement);\n                }\n            }\n        }\n    });\n}","import TextElement from '../../classes/text_element';\n\nexport const listenArrowKeyInTheText = (child: TextElement): void => {\n    const listenElement = child.getElement();\n    listenElement.addEventListener('keydown', (e: KeyboardEvent) => {\n        if (e.key === 'ArrowUp') {\n            const previousChildElement = document.getElementById(child.getElementId()).previousElementSibling\n            if (previousChildElement) document.getElementById(previousChildElement.id).focus();\n        }\n        if (e.key === 'ArrowDown') {\n            const nextChildElement = document.getElementById(child.getElementId()).nextElementSibling;\n            if (nextChildElement) document.getElementById(nextChildElement.id).focus();\n        }\n    });\n}","export const generateRandomString = (): string => {\n    const length = 15;\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return `thinitor_element_${result}`;\n}\n\nexport const insertAfter = (rootNode: Element,newNode: Element, existingNode: Element): void => {\n    rootNode.insertBefore(newNode, existingNode.nextSibling);\n}\n\nexport const getElementIndex = (element: Element, id: string): number => {\n    const children = element.parentElement.children;\n    let childIndex: number;\n    for (let index = 0; index < children.length; index++) {\n        if (children[index].id === id) {\n            childIndex = index;\n            break;\n        }\n    }\n    return childIndex;\n}","import constants from '../constants';\n\n// return이 없는 함수\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const logError = (text: string) => {\n    console.error(`${constants.ERROR_PREFIX}${text}`);\n}\n\n// return이 없는 함수\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const logUndefinedParameter = (funcName: string) => {\n    console.error(`${constants.ERROR_PREFIX}Missing parameter. function: ${funcName}`);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(607);\n"],"sourceRoot":""}